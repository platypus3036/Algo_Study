name: Generate Daily Study Template

on:
  workflow_dispatch:
    inputs:
      date:
        description: '폴더 이름으로 사용할 날짜 (yymmdd 형식)'
        required: true
        default: "$(date +'%y%m%d')"
      problems:
        description: '문제와 링크 목록 (형식: 문제이름1:링크1,문제이름2:링크2)'
        required: true
        default: '문제A:https://example.com/problem/1,문제B:https://example.com/problem/2'

jobs:
  generate-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Common Study Template with Links
        run: |
          TARGET_DATE=${{ github.event.inputs.date }}
          PROBLEM_LIST=${{ github.event.inputs.problems }}

          mkdir -p "$TARGET_DATE"

          cat <<-EOF > "${TARGET_DATE}/README.md"
          # 🗓️ ${TARGET_DATE} 스터디 회고

          ## 🎯 이번 주 스터디 목표 및 주요 학습 내용

          - 

          ---

          ## 📚 문제별 토론 및 회고
          EOF

          # 쉼표로 구분된 목록을 배열로 변환합니다.
          IFS=',' read -ra PROBLEMS_ARRAY <<< "$PROBLEM_LIST"

          for item in "${PROBLEMS_ARRAY[@]}"; do
            # 앞뒤 공백 제거
            trimmed_item=$(echo "$item" | xargs)
            
            # ':'를 기준으로 문제 이름과 링크를 분리합니다.
            # 링크에 ':'가 포함될 수 있으므로(예: https://...), 두 번째 필드부터 끝까지를 링크로 처리합니다.
            PROBLEM_NAME=$(echo "$trimmed_item" | cut -d':' -f1)
            PROBLEM_LINK=$(echo "$trimmed_item" | cut -d':' -f2-)
            
            cat <<-EOM >> "${TARGET_DATE}/README.md"

          ### 📝 ${PROBLEM_NAME}

          - **문제 링크**: [바로가기](${PROBLEM_LINK})
          - **난이도**: 
          - **주요 접근법 요약**: (예: A는 DFS, B는 DP로 접근)
          - **토론 내용 및 피드백**: (예: 시간 복잡도 개선 방안, 코드 가독성 논의)
          EOM
          done

          # KPT 및 다음 주 계획 섹션 추가
          cat <<-EOF >> "${TARGET_DATE}/README.md"

          ---

          ## 🚀 KPT 회고 (Keep, Problem, Try)

          ### Keep (유지할 점)

          - 

          ### Problem (개선할 점)

          - 

          ### Try (다음에 시도할 점)

          - 

          ---

          ## 🗓️ 다음 주 계획

          - 
          EOF

      - name: Commit and Push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "docs: ${{ github.event.inputs.date }} 스터디 회고 템플릿 생성" || exit 0
          git push
