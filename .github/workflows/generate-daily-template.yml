# .github/workflows/generate-daily-template.yml

name: Generate Daily Problem Template

on:
  workflow_dispatch:
    inputs:
      date:
        description: '폴더 이름으로 사용할 날짜 (yymmdd 형식)'
        required: true
        default: $(date +'%y%m%d')
      problems:
        description: '생성할 문제 폴더 이름 (쉼표로 구분)'
        required: true
        default: '문제이름1,문제이름2'

jobs:
  generate-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Directories and Files
        run: |
          TARGET_DATE=${{ github.event.inputs.date }}
          PROBLEM_LIST=${{ github.event.inputs.problems }}

          # 1. 날짜 폴더 생성 및 그 안에 README.md 생성
          mkdir -p "$TARGET_DATE"
          touch "${TARGET_DATE}/README.md"
          
          # 2. 쉼표로 구분된 문제 목록을 배열로 변환
          IFS=',' read -ra PROBLEMS_ARRAY <<< "$PROBLEM_LIST"
          
          # 3. 배열을 순회하며 각 문제 폴더와 그 안의 README.md 생성
          for problem in "${PROBLEMS_ARRAY[@]}"; do
            # 앞뒤 공백 제거
            trimmed_problem=$(echo "$problem" | xargs)
            
            # 문제 폴더 생성
            mkdir -p "${TARGET_DATE}/${trimmed_problem}"
            
            # 문제 폴더 내에 README.md 생성 (Git이 빈 폴더를 추적하도록 함)
            touch "${TARGET_DATE}/${trimmed_problem}/README.md"
          done

      - name: Commit and Push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "feat: ${{ github.event.inputs.date }} 문제 템플릿 생성" || exit 0
          git push
